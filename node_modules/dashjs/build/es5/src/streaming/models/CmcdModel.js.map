{"version":3,"sources":["../../../../../src/streaming/models/CmcdModel.js"],"names":["CMCD_REQUEST_FIELD_NAME","CMCD_VERSION","OBJECT_TYPES","MANIFEST","AUDIO","VIDEO","INIT","CAPTION","ISOBMFF_TEXT_TRACK","ENCRYPTION_KEY","OTHER","STREAMING_FORMATS","DASH","MSS","STREAM_TYPES","VOD","LIVE","CmcdModel","logger","dashManifestModel","instance","internalData","abrController","dashMetrics","playbackController","_isStartup","_bufferLevelStarved","_initialMediaRequestsDone","context","eventBus","getInstance","settings","setup","getLogger","_resetInitialSettings","initialize","on","MediaPlayerEvents","PLAYBACK_RATE_CHANGED","_onPlaybackRateChanged","MANIFEST_LOADED","_onManifestLoaded","BUFFER_LEVEL_STATE_CHANGED","_onBufferLevelStateChanged","PLAYBACK_SEEKED","_onPlaybackSeeked","setConfig","config","pr","nor","st","sf","sid","Utils","generateUuid","cid","getQueryParameter","request","get","streaming","cmcd","enabled","cmcdData","_getCmcdData","finalPayloadString","_buildFinalString","trigger","MetricsReportingEvents","CMCD_DATA_GENERATED","url","mediaType","cmcdString","key","value","e","type","HTTPRequest","MPD_TYPE","_getCmcdDataForMpd","MEDIA_SEGMENT_TYPE","_initForMediaType","_getCmcdDataForMediaSegment","INIT_SEGMENT_TYPE","_getCmcdDataForInitSegment","OTHER_TYPE","XLINK_EXPANSION_TYPE","_getCmcdDataForOther","data","_getGenericCmcdData","ot","encodedBitrate","_getBitrateByRequest","d","_getObjectDurationByRequest","mtp","_getMeasuredThroughputByType","dl","_getDeadlineByType","bl","_getBufferLevelByType","tb","_getTopBitrateByType","br","isNaN","bs","su","hasOwnProperty","v","quality","bitrateList","mediaInfo","parseInt","bandwidth","info","getTopBitrateInfoFor","Math","round","bitrate","duration","getThroughputHistory","getSafeAverageThroughput","playbackRate","bufferLevel","getCurrentBufferLevel","isDynamic","getIsDynamic","protocol","state","BUFFER_EMPTY","keys","Object","sort","a","b","localeCompare","length","reduce","acc","index","string","replace","reset","off","__dashjs_factory_name","FactoryMaker","getSingletonFactory"],"mappings":"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","file":"CmcdModel.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../../core/EventBus';\nimport MediaPlayerEvents from '../MediaPlayerEvents';\nimport MetricsReportingEvents from '../metrics/MetricsReportingEvents';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport Settings from '../../core/Settings';\nimport {HTTPRequest} from '../vo/metrics/HTTPRequest';\nimport DashManifestModel from '../../dash/models/DashManifestModel';\nimport Utils from '../../core/Utils';\n\nconst CMCD_REQUEST_FIELD_NAME = 'CMCD';\nconst CMCD_VERSION = 1;\nconst OBJECT_TYPES = {\n    MANIFEST: 'm',\n    AUDIO: 'a',\n    VIDEO: 'v',\n    INIT: 'i',\n    CAPTION: 'c',\n    ISOBMFF_TEXT_TRACK: 'tt',\n    ENCRYPTION_KEY: 'k',\n    OTHER: 'o'\n};\nconst STREAMING_FORMATS = {\n    DASH: 'd',\n    MSS: 's'\n};\nconst STREAM_TYPES = {\n    VOD: 'v',\n    LIVE: 'l'\n};\n\nfunction CmcdModel() {\n\n    let logger,\n        dashManifestModel,\n        instance,\n        internalData,\n        abrController,\n        dashMetrics,\n        playbackController,\n        _isStartup,\n        _bufferLevelStarved,\n        _initialMediaRequestsDone;\n\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n    let settings = Settings(context).getInstance();\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        dashManifestModel = DashManifestModel(context).getInstance();\n\n        _resetInitialSettings();\n    }\n\n    function initialize() {\n        eventBus.on(MediaPlayerEvents.PLAYBACK_RATE_CHANGED, _onPlaybackRateChanged, instance);\n        eventBus.on(MediaPlayerEvents.MANIFEST_LOADED, _onManifestLoaded, instance);\n        eventBus.on(MediaPlayerEvents.BUFFER_LEVEL_STATE_CHANGED, _onBufferLevelStateChanged, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_SEEKED, _onPlaybackSeeked, instance);\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.abrController) {\n            abrController = config.abrController;\n        }\n\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n\n        if (config.playbackController) {\n            playbackController = config.playbackController;\n        }\n    }\n\n    function _resetInitialSettings() {\n        internalData = {\n            pr: 1,\n            nor: null,\n            st: null,\n            sf: null,\n            sid: `${Utils.generateUuid()}`,\n            cid: null\n        };\n        _bufferLevelStarved = {};\n        _isStartup = {};\n        _initialMediaRequestsDone = {};\n    }\n\n    function getQueryParameter(request) {\n        try {\n            if (settings.get().streaming.cmcd && settings.get().streaming.cmcd.enabled) {\n                const cmcdData = _getCmcdData(request);\n                const finalPayloadString = _buildFinalString(cmcdData);\n\n                eventBus.trigger(MetricsReportingEvents.CMCD_DATA_GENERATED, {\n                    url: request.url,\n                    mediaType: request.mediaType,\n                    cmcdData,\n                    cmcdString: finalPayloadString\n                });\n                return {\n                    key: CMCD_REQUEST_FIELD_NAME,\n                    value: finalPayloadString\n                };\n            }\n\n            return null;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _getCmcdData(request) {\n        try {\n            let cmcdData = null;\n\n            if (request.type === HTTPRequest.MPD_TYPE) {\n                return _getCmcdDataForMpd(request);\n            } else if (request.type === HTTPRequest.MEDIA_SEGMENT_TYPE) {\n                _initForMediaType(request.mediaType);\n                return _getCmcdDataForMediaSegment(request);\n            } else if (request.type === HTTPRequest.INIT_SEGMENT_TYPE) {\n                return _getCmcdDataForInitSegment(request);\n            } else if (request.type === HTTPRequest.OTHER_TYPE || request.type === HTTPRequest.XLINK_EXPANSION_TYPE) {\n                return _getCmcdDataForOther(request);\n            }\n\n            return cmcdData;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _getCmcdDataForMpd() {\n        const data = _getGenericCmcdData();\n\n        data.ot = `${OBJECT_TYPES.MANIFEST}`;\n\n        return data;\n    }\n\n    function _getCmcdDataForMediaSegment(request) {\n        const data = _getGenericCmcdData();\n        const encodedBitrate = _getBitrateByRequest(request);\n        const d = _getObjectDurationByRequest(request);\n        const ot = request.mediaType === 'video' ? `${OBJECT_TYPES.VIDEO}` : request.mediaType === 'audio' ? `${OBJECT_TYPES.AUDIO}` : request.mediaType === 'fragmentedText' ? `${OBJECT_TYPES.CAPTION}` : null;\n        const mtp = _getMeasuredThroughputByType(request.mediaType);\n        const dl = _getDeadlineByType(request.mediaType);\n        const bl = _getBufferLevelByType(request.mediaType);\n        const tb = _getTopBitrateByType(request.mediaType);\n        const pr = internalData.pr;\n\n        if (encodedBitrate) {\n            data.br = encodedBitrate;\n        }\n\n        if (ot) {\n            data.ot = ot;\n        }\n\n        if (!isNaN(d)) {\n            data.d = d;\n        }\n\n        if (!isNaN(mtp)) {\n            data.mtp = mtp;\n        }\n\n        if (!isNaN(dl)) {\n            data.dl = dl;\n        }\n\n        if (!isNaN(bl)) {\n            data.bl = bl;\n        }\n\n        if (!isNaN(tb)) {\n            data.tb = tb;\n        }\n\n        if (!isNaN(pr) && pr !== 1) {\n            data.pr = pr;\n        }\n\n        if (_bufferLevelStarved[request.mediaType]) {\n            data.bs = true;\n            _bufferLevelStarved[request.mediaType] = false;\n        }\n\n        if (_isStartup[request.mediaType] || !_initialMediaRequestsDone[request.mediaType]) {\n            data.su = true;\n            _isStartup[request.mediaType] = false;\n            _initialMediaRequestsDone[request.mediaType] = true;\n        }\n\n        return data;\n    }\n\n    function _initForMediaType(mediaType) {\n\n        if (!_initialMediaRequestsDone.hasOwnProperty(mediaType)) {\n            _initialMediaRequestsDone[mediaType] = false;\n        }\n\n        if (!_isStartup.hasOwnProperty(mediaType)) {\n            _isStartup[mediaType] = false;\n        }\n\n        if (!_bufferLevelStarved.hasOwnProperty(mediaType)) {\n            _bufferLevelStarved[mediaType] = false;\n        }\n    }\n\n    function _getCmcdDataForInitSegment() {\n        const data = _getGenericCmcdData();\n\n        data.ot = `${OBJECT_TYPES.INIT}`;\n        data.su = true;\n\n        return data;\n    }\n\n    function _getCmcdDataForOther() {\n        const data = _getGenericCmcdData();\n\n        data.ot = `${OBJECT_TYPES.OTHER}`;\n\n        return data;\n    }\n\n\n    function _getGenericCmcdData() {\n        const data = {};\n\n        let cid = settings.get().streaming.cmcd.cid ? settings.get().streaming.cmcd.cid : internalData.cid;\n\n        data.v = CMCD_VERSION;\n        data.sid = settings.get().streaming.cmcd.sid ? settings.get().streaming.cmcd.sid : internalData.sid;\n\n        data.sid = `${data.sid}`;\n\n        if (cid) {\n            data.cid = `${cid}`;\n        }\n\n        if (!isNaN(internalData.pr) && internalData.pr !== 1 && internalData.pr !== null) {\n            data.pr = internalData.pr;\n        }\n\n        if (internalData.st) {\n            data.st = internalData.st;\n        }\n\n        if (internalData.sf) {\n            data.sf = internalData.sf;\n        }\n\n        return data;\n    }\n\n    function _getBitrateByRequest(request) {\n        try {\n            const quality = request.quality;\n            const bitrateList = request.mediaInfo.bitrateList;\n\n            return parseInt(bitrateList[quality].bandwidth / 1000);\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _getTopBitrateByType(mediaType) {\n        try {\n            const info = abrController.getTopBitrateInfoFor(mediaType);\n            return Math.round(info.bitrate / 1000);\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _getObjectDurationByRequest(request) {\n        try {\n            return !isNaN(request.duration) ? Math.round(request.duration * 1000) : null;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _getMeasuredThroughputByType(mediaType) {\n        try {\n            return parseInt(abrController.getThroughputHistory().getSafeAverageThroughput(mediaType) / 100) * 100;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _getDeadlineByType(mediaType) {\n        try {\n            const playbackRate = internalData.pr;\n            const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType);\n\n            if (!isNaN(playbackRate) && !isNaN(bufferLevel)) {\n                return parseInt((bufferLevel / playbackRate) * 10) * 100;\n            }\n\n            return null;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _getBufferLevelByType(mediaType) {\n        try {\n            const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType);\n\n            if (!isNaN(bufferLevel)) {\n                return parseInt(bufferLevel * 10) * 100;\n            }\n\n            return null;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _onPlaybackRateChanged(data) {\n        try {\n            internalData.pr = data.playbackRate;\n        } catch (e) {\n\n        }\n    }\n\n    function _onManifestLoaded(data) {\n        try {\n            const isDynamic = dashManifestModel.getIsDynamic(data.data);\n            const st = isDynamic ? `${STREAM_TYPES.LIVE}` : `${STREAM_TYPES.VOD}`;\n            const sf = data.protocol && data.protocol === 'MSS' ? `${STREAMING_FORMATS.MSS}` : `${STREAMING_FORMATS.DASH}`;\n\n            internalData.st = `${st}`;\n            internalData.sf = `${sf}`;\n        } catch (e) {\n        }\n    }\n\n    function _onBufferLevelStateChanged(data) {\n        try {\n            if (data.state && data.mediaType) {\n                if (data.state === MediaPlayerEvents.BUFFER_EMPTY) {\n\n                    if (!_bufferLevelStarved[data.mediaType]) {\n                        _bufferLevelStarved[data.mediaType] = true;\n                    }\n                    if (!_isStartup[data.mediaType]) {\n                        _isStartup[data.mediaType] = true;\n                    }\n                }\n            }\n        } catch (e) {\n\n        }\n    }\n\n    function _onPlaybackSeeked() {\n        for (let key in _bufferLevelStarved) {\n            if (_bufferLevelStarved.hasOwnProperty(key)) {\n                _bufferLevelStarved[key] = true;\n            }\n        }\n\n        for (let key in _isStartup) {\n            if (_isStartup.hasOwnProperty(key)) {\n                _isStartup[key] = true;\n            }\n        }\n    }\n\n    function _buildFinalString(cmcdData) {\n        try {\n            if (!cmcdData) {\n                return null;\n            }\n            const keys = Object.keys(cmcdData).sort((a, b) =>a.localeCompare(b));\n            const length = keys.length;\n\n            let cmcdString = keys.reduce((acc, key, index) => {\n                if (key === 'v' && cmcdData[key] === 1) return acc; // Version key should only be reported if it is != 1\n                if (typeof cmcdData[key] === 'string' && (key !== 'ot' || key !== 'sf' || key !== 'st')) {\n                    let string = cmcdData[key].replace(/\"/g, '\\\"');\n                    acc += `${key}=\"${string}\"`;\n                } else {\n                    acc += `${key}=${cmcdData[key]}`;\n                }\n                if (index < length - 1) {\n                    acc += ',';\n                }\n\n                return acc;\n            }, '');\n\n            cmcdString = cmcdString.replace(/=true/g, '');\n\n            return cmcdString;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function reset() {\n        eventBus.off(MediaPlayerEvents.PLAYBACK_RATE_CHANGED, _onPlaybackRateChanged, this);\n        eventBus.off(MediaPlayerEvents.MANIFEST_LOADED, _onManifestLoaded, this);\n        eventBus.off(MediaPlayerEvents.BUFFER_LEVEL_STATE_CHANGED, _onBufferLevelStateChanged, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_SEEKED, _onPlaybackSeeked, instance);\n\n        _resetInitialSettings();\n    }\n\n    instance = {\n        getQueryParameter,\n        setConfig,\n        reset,\n        initialize\n    };\n\n    setup();\n\n    return instance;\n}\n\nCmcdModel.__dashjs_factory_name = 'CmcdModel';\nexport default FactoryMaker.getSingletonFactory(CmcdModel);\n"]}