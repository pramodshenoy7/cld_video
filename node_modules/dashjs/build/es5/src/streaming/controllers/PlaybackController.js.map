{"version":3,"sources":["../../../../../src/streaming/controllers/PlaybackController.js"],"names":["LIVE_UPDATE_PLAYBACK_TIME_INTERVAL_MS","PlaybackController","context","eventBus","getInstance","instance","logger","streamController","dashMetrics","adapter","videoModel","timelineConverter","streamSwitch","streamSeekTime","wallclockTimeIntervalId","liveDelay","streamInfo","isDynamic","mediaPlayerModel","playOnceInitialized","lastLivePlaybackTime","availabilityStartTime","seekTarget","isLowLatencySeekingInProgress","playbackStalled","minPlaybackRateChange","uriFragmentModel","settings","setup","getLogger","reset","initialize","sInfo","periodSwitch","seekTime","addAllListeners","manifestInfo","ua","navigator","userAgent","toLowerCase","isSafari","test","on","Events","STREAM_INITIALIZED","onStreamInitialized","DATA_UPDATE_COMPLETED","onDataUpdateCompleted","LOADING_PROGRESS","onFragmentLoadProgress","BUFFER_LEVEL_STATE_CHANGED","onBufferLevelStateChanged","PLAYBACK_PROGRESS","onPlaybackProgression","PLAYBACK_TIME_UPDATED","PLAYBACK_ENDED","onPlaybackEnded","priority","EventBus","EVENT_PRIORITY_HIGH","STREAM_INITIALIZING","onStreamInitializing","play","e","isNaN","startTime","liveStartTime","dvrInfo","getCurrentDVRInfo","dvrWindow","range","startTimeFromUri","getStartTimeFromUriParameters","info","Math","max","min","start","duration","getTime","trigger","PLAYBACK_SEEKING","seek","getTimeToStreamEnd","parseFloat","getStreamEndTime","toFixed","getElement","isPaused","pause","isSeeking","time","stickToBuffered","internalSeek","currentTime","removeEventListener","onPlaybackSeeking","setCurrentTime","PLAYBACK_SEEK_ASKED","seekToLive","DVRMetrics","DVRWindow","end","getLiveDelay","getNormalizedTime","t","timeOffset","getPlaybackRate","getPlayedRanges","getEnded","getIsDynamic","getStreamController","computeAndSetLiveDelay","fragmentDuration","dvrWindowSize","minBufferTime","delay","ret","END_OF_PLAYLIST_PADDING","MIN_BUFFER_TIME_FACTOR","FRAGMENT_DURATION_FACTOR","adjustedFragmentDuration","isFinite","NaN","suggestedPresentationDelay","getSuggestedPresentationDelay","get","streaming","lowLatencyEnabled","liveDelayFragmentCount","useSuggestedPresentationDelay","getAvailabilityStartTime","targetDelayCapping","setLiveDelay","value","useMaxValue","getCurrentLiveLatency","now","Date","getClientTimeOffset","off","stopUpdatingWallclockTime","removeAllListeners","setConfig","config","fragData","getURIFragmentData","refStream","getStreams","refStreamStartTime","getStreamInfo","split","posix","indexOf","substring","parseInt","getActualPresentationTime","actualTime","debug","abs","startUpdatingWallclockTime","tick","onWallclockTime","setInterval","wallclockTimeUpdateInterval","clearInterval","updateCurrentTime","getReadyState","timeChanged","error","representationInfo","convertDataToRepresentationInfo","currentRepresentation","mediaInfo","id","onCanPlay","CAN_PLAY","onPlaybackStart","PLAYBACK_STARTED","onPlaybackWaiting","PLAYBACK_WAITING","playingTime","onPlaybackPlaying","PLAYBACK_PLAYING","onPlaybackPaused","PLAYBACK_PAUSED","ended","onPlaybackSeeked","PLAYBACK_SEEKED","addEventListener","onPlaybackTimeUpdated","timeToEnd","updateLivePlaybackTime","onPlaybackProgress","onPlaybackRateChanged","rate","PLAYBACK_RATE_CHANGED","playbackRate","onPlaybackMetaDataLoaded","PLAYBACK_METADATA_LOADED","onNativePlaybackEnded","getActiveStreamInfo","isLast","onPlaybackError","event","target","srcElement","PLAYBACK_ERROR","WALLCLOCK_TIME_UPDATED","_isCatchupEnabled","liveCatchup","_needToCatchUp","startPlaybackCatchUp","stopPlaybackCatchUp","enabled","getBufferLevel","bufferLevel","getActiveStreamProcessors","forEach","bl","p","_getCatchupMode","playbackBufferMin","mode","Constants","LIVE_CATCHUP_MODE_LOLP","LIVE_CATCHUP_MODE_DEFAULT","catchupMode","currentLiveLatency","liveCatchupLatencyThreshold","getLiveCatchupLatencyThreshold","liveCatchUpMinDrift","minDrift","currentBuffer","_lolpNeedToCatchUpCustom","_defaultNeedToCatchUp","latencyDrift","results","currentPlaybackRate","liveCatchupPlaybackRate","_calculateNewPlaybackRateLolP","_calculateNewPlaybackRateDefault","newRate","setPlaybackRate","deltaLatency","maxDrift","liveCatchUpPlaybackRate","cpr","d","s","pow","E","deltaBuffer","minDifference","stream","request","minDelay","warn","update","streamId","state","MetricsConstants","BUFFER_EMPTY","setStallState","mediaType","onPlaybackStalled","PLAYBACK_STALLED","applyServiceDescription","serviceDescriptions","llsd","i","length","sd","schemeIdUri","SERVICE_DESCRIPTION_LL_SCHEME","supplementalProperties","SUPPLEMENTAL_PROPERTY_LL_SCHEME","latency","undefined","__dashjs_factory_name","FactoryMaker","getSingletonFactory"],"mappings":"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","file":"PlaybackController.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport MetricsConstants from '../constants/MetricsConstants';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\n\nconst LIVE_UPDATE_PLAYBACK_TIME_INTERVAL_MS = 500;\n\nfunction PlaybackController() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        streamController,\n        dashMetrics,\n        adapter,\n        videoModel,\n        timelineConverter,\n        streamSwitch,\n        streamSeekTime,\n        wallclockTimeIntervalId,\n        liveDelay,\n        streamInfo,\n        isDynamic,\n        mediaPlayerModel,\n        playOnceInitialized,\n        lastLivePlaybackTime,\n        availabilityStartTime,\n        seekTarget,\n        isLowLatencySeekingInProgress,\n        playbackStalled,\n        minPlaybackRateChange,\n        uriFragmentModel,\n        settings;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n\n        reset();\n    }\n\n    function initialize(sInfo, periodSwitch, seekTime) {\n        streamInfo = sInfo;\n        addAllListeners();\n        isDynamic = streamInfo.manifestInfo.isDynamic;\n        isLowLatencySeekingInProgress = false;\n        playbackStalled = false;\n        streamSwitch = periodSwitch === true;\n        streamSeekTime = seekTime;\n\n        const ua = typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase() : '';\n\n        // Detect safari browser (special behavior for low latency streams)\n        const isSafari = /safari/.test(ua) && !/chrome/.test(ua);\n        minPlaybackRateChange = isSafari ? 0.25 : 0.02;\n\n        eventBus.on(Events.STREAM_INITIALIZED, onStreamInitialized, this);\n        eventBus.on(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\n        eventBus.on(Events.LOADING_PROGRESS, onFragmentLoadProgress, this);\n        eventBus.on(Events.BUFFER_LEVEL_STATE_CHANGED, onBufferLevelStateChanged, this);\n        eventBus.on(Events.PLAYBACK_PROGRESS, onPlaybackProgression, this);\n        eventBus.on(Events.PLAYBACK_TIME_UPDATED, onPlaybackProgression, this);\n        eventBus.on(Events.PLAYBACK_ENDED, onPlaybackEnded, this, { priority: EventBus.EVENT_PRIORITY_HIGH });\n        eventBus.on(Events.STREAM_INITIALIZING, onStreamInitializing, this);\n\n        if (playOnceInitialized) {\n            playOnceInitialized = false;\n            play();\n        }\n    }\n\n    function onStreamInitialized(e) {\n        // Seamless period switch\n        if (streamSwitch && isNaN(streamSeekTime)) return;\n\n        // Seek new stream in priority order:\n        // - at seek time (streamSeekTime) when switching period\n        // - at start time provided in URI parameters\n        // - at stream/period start time (for static streams) or live start time (for dynamic streams)\n        let startTime = streamSeekTime;\n        if (isNaN(startTime)) {\n            if (isDynamic) {\n                // For dynamic stream, start by default at (live edge - live delay)\n                startTime = e.liveStartTime;\n                // If start time in URI, take min value between live edge time and time from URI (capped by DVR window range)\n                const dvrInfo = dashMetrics.getCurrentDVRInfo();\n                const dvrWindow = dvrInfo ? dvrInfo.range : null;\n                if (dvrWindow) {\n                    // #t shall be relative to period start\n                    const startTimeFromUri = getStartTimeFromUriParameters(true);\n                    if (!isNaN(startTimeFromUri)) {\n                        logger.info('Start time from URI parameters: ' + startTimeFromUri);\n                        startTime = Math.max(Math.min(startTime, startTimeFromUri), dvrWindow.start);\n                    }\n                }\n            } else {\n                // For static stream, start by default at period start\n                startTime = streamInfo.start;\n                // If start time in URI, take max value between period start and time from URI (if in period range)\n                const startTimeFromUri = getStartTimeFromUriParameters(false);\n                if (!isNaN(startTimeFromUri) && startTimeFromUri < (startTime + streamInfo.duration)) {\n                    logger.info('Start time from URI parameters: ' + startTimeFromUri);\n                    startTime = Math.max(startTime, startTimeFromUri);\n                }\n            }\n        }\n\n        if (!isNaN(startTime) && startTime !== videoModel.getTime()) {\n            // Trigger PLAYBACK_SEEKING event for controllers\n            eventBus.trigger(Events.PLAYBACK_SEEKING, { seekTime: startTime });\n            // Seek video model\n            seek(startTime, false, true);\n        }\n    }\n\n    function getTimeToStreamEnd() {\n        return parseFloat((getStreamEndTime() - getTime()).toFixed(5));\n    }\n\n    function getStreamEndTime() {\n        return streamInfo.start + streamInfo.duration;\n    }\n\n    function play() {\n        if (streamInfo && videoModel && videoModel.getElement()) {\n            videoModel.play();\n        } else {\n            playOnceInitialized = true;\n        }\n    }\n\n    function isPaused() {\n        return streamInfo && videoModel ? videoModel.isPaused() : null;\n    }\n\n    function pause() {\n        if (streamInfo && videoModel) {\n            videoModel.pause();\n        }\n    }\n\n    function isSeeking() {\n        return streamInfo && videoModel ? videoModel.isSeeking() : null;\n    }\n\n    function seek(time, stickToBuffered, internalSeek) {\n        if (!streamInfo || !videoModel) return;\n\n        let currentTime = !isNaN(seekTarget) ? seekTarget : videoModel.getTime();\n        if (time === currentTime) return;\n\n        if (internalSeek === true) {\n            // Internal seek = seek video model only (disable 'seeking' listener)\n            // buffer(s) are already appended at requested time\n            videoModel.removeEventListener('seeking', onPlaybackSeeking);\n            logger.info('Requesting internal seek to time: ' + time);\n            videoModel.setCurrentTime(time, stickToBuffered);\n        } else {\n            seekTarget = time;\n            eventBus.trigger(Events.PLAYBACK_SEEK_ASKED);\n            logger.info('Requesting seek to time: ' + time);\n            videoModel.setCurrentTime(time, stickToBuffered);\n        }\n    }\n\n    function seekToLive() {\n        const DVRMetrics = dashMetrics.getCurrentDVRInfo();\n        const DVRWindow = DVRMetrics ? DVRMetrics.range : null;\n\n        seek(DVRWindow.end - mediaPlayerModel.getLiveDelay(), true, false);\n    }\n\n    function getTime() {\n        return streamInfo && videoModel ? videoModel.getTime() : null;\n    }\n\n    function getNormalizedTime() {\n        let t = getTime();\n\n        if (isDynamic && !isNaN(availabilityStartTime)) {\n            const timeOffset = availabilityStartTime / 1000;\n            // Fix current time for firefox and safari (returned as an absolute time)\n            if (t > timeOffset) {\n                t -= timeOffset;\n            }\n        }\n        return t;\n    }\n\n    function getPlaybackRate() {\n        return streamInfo && videoModel ? videoModel.getPlaybackRate() : null;\n    }\n\n    function getPlayedRanges() {\n        return streamInfo && videoModel ? videoModel.getPlayedRanges() : null;\n    }\n\n    function getEnded() {\n        return streamInfo && videoModel ? videoModel.getEnded() : null;\n    }\n\n    function getIsDynamic() {\n        return isDynamic;\n    }\n\n    function getStreamController() {\n        return streamController;\n    }\n\n    /**\n     * Computes the desirable delay for the live edge to avoid a risk of getting 404 when playing at the bleeding edge\n     * @param {number} fragmentDuration - seconds?\n     * @param {number} dvrWindowSize - seconds?\n     * @param {number} minBufferTime - seconds?\n     * @returns {number} object\n     * @memberof PlaybackController#\n     */\n    function computeAndSetLiveDelay(fragmentDuration, dvrWindowSize, minBufferTime) {\n        let delay,\n            ret,\n            startTime;\n        const END_OF_PLAYLIST_PADDING = 10;\n        const MIN_BUFFER_TIME_FACTOR = 4;\n        const FRAGMENT_DURATION_FACTOR = 4;\n        const adjustedFragmentDuration = !isNaN(fragmentDuration) && isFinite(fragmentDuration) ? fragmentDuration : NaN;\n\n        let suggestedPresentationDelay = adapter.getSuggestedPresentationDelay();\n\n        if (settings.get().streaming.lowLatencyEnabled) {\n            delay = 0;\n        } else if (mediaPlayerModel.getLiveDelay()) {\n            delay = mediaPlayerModel.getLiveDelay(); // If set by user, this value takes precedence\n        } else if (settings.get().streaming.liveDelayFragmentCount !== null && !isNaN(settings.get().streaming.liveDelayFragmentCount) && !isNaN(adjustedFragmentDuration)) {\n            delay = adjustedFragmentDuration * settings.get().streaming.liveDelayFragmentCount;\n        } else if (settings.get().streaming.useSuggestedPresentationDelay === true && suggestedPresentationDelay !== null && !isNaN(suggestedPresentationDelay) && suggestedPresentationDelay > 0) {\n            delay = suggestedPresentationDelay;\n        } else if (!isNaN(adjustedFragmentDuration)) {\n            delay = adjustedFragmentDuration * FRAGMENT_DURATION_FACTOR;\n        } else {\n            delay = !isNaN(minBufferTime) ? minBufferTime * MIN_BUFFER_TIME_FACTOR : streamInfo.manifestInfo.minBufferTime * MIN_BUFFER_TIME_FACTOR;\n        }\n\n        startTime = adapter.getAvailabilityStartTime();\n\n        if (startTime !== null) {\n            availabilityStartTime = startTime;\n        }\n\n        if (dvrWindowSize > 0) {\n            // cap target latency to:\n            // - dvrWindowSize / 2 for short playlists\n            // - dvrWindowSize - END_OF_PLAYLIST_PADDING for longer playlists\n            const targetDelayCapping = Math.max(dvrWindowSize - END_OF_PLAYLIST_PADDING, dvrWindowSize / 2);\n            ret = Math.min(delay, targetDelayCapping);\n        } else {\n            ret = delay;\n        }\n        liveDelay = ret;\n        return ret;\n    }\n\n    function getLiveDelay() {\n        return liveDelay;\n    }\n\n    function setLiveDelay(value, useMaxValue = false) {\n        if (useMaxValue && value < liveDelay) {\n            return;\n        }\n\n        liveDelay = value;\n    }\n\n    function getCurrentLiveLatency() {\n        if (!isDynamic || isNaN(availabilityStartTime)) {\n            return NaN;\n        }\n        let currentTime = getNormalizedTime();\n        if (isNaN(currentTime) || currentTime === 0) {\n            return 0;\n        }\n\n        const now = new Date().getTime() + timelineConverter.getClientTimeOffset() * 1000;\n        return Math.max(((now - availabilityStartTime - currentTime * 1000) / 1000).toFixed(3), 0);\n    }\n\n    function reset() {\n        playOnceInitialized = false;\n        streamSwitch = false;\n        streamSeekTime = NaN;\n        liveDelay = 0;\n        availabilityStartTime = 0;\n        seekTarget = NaN;\n        if (videoModel) {\n            eventBus.off(Events.STREAM_INITIALIZED, onStreamInitialized, this);\n            eventBus.off(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\n            eventBus.off(Events.BUFFER_LEVEL_STATE_CHANGED, onBufferLevelStateChanged, this);\n            eventBus.off(Events.LOADING_PROGRESS, onFragmentLoadProgress, this);\n            eventBus.off(Events.PLAYBACK_PROGRESS, onPlaybackProgression, this);\n            eventBus.off(Events.PLAYBACK_TIME_UPDATED, onPlaybackProgression, this);\n            eventBus.off(Events.PLAYBACK_ENDED, onPlaybackEnded, this);\n            eventBus.off(Events.STREAM_INITIALIZING, onStreamInitializing, this);\n            stopUpdatingWallclockTime();\n            removeAllListeners();\n        }\n        wallclockTimeIntervalId = null;\n        videoModel = null;\n        streamInfo = null;\n        isDynamic = null;\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.streamController) {\n            streamController = config.streamController;\n        }\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n        if (config.mediaPlayerModel) {\n            mediaPlayerModel = config.mediaPlayerModel;\n        }\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n        if (config.videoModel) {\n            videoModel = config.videoModel;\n        }\n        if (config.timelineConverter) {\n            timelineConverter = config.timelineConverter;\n        }\n        if (config.uriFragmentModel) {\n            uriFragmentModel = config.uriFragmentModel;\n        }\n        if (config.settings) {\n            settings = config.settings;\n        }\n    }\n\n    function getStartTimeFromUriParameters(isDynamic) {\n        const fragData = uriFragmentModel.getURIFragmentData();\n        if (!fragData || !fragData.t) {\n            return NaN;\n        }\n        const refStream = streamController.getStreams()[0];\n        const refStreamStartTime = refStream.getStreamInfo().start;\n        // Consider only start time of MediaRange\n        // TODO: consider end time of MediaRange to stop playback at provided end time\n        fragData.t = fragData.t.split(',')[0];\n        // \"t=<time>\" : time is relative to 1st period start\n        // \"t=posix:<time>\" : time is absolute start time as number of seconds since 01-01-1970\n        const posix = fragData.t.indexOf('posix:') !== -1 ? fragData.t.substring(6) === 'now' ? Date.now() / 1000 : parseInt(fragData.t.substring(6)) : NaN;\n        let startTime = (isDynamic && !isNaN(posix)) ? posix - availabilityStartTime / 1000 : parseInt(fragData.t) + refStreamStartTime;\n        return startTime;\n    }\n\n    function getActualPresentationTime(currentTime) {\n        const DVRMetrics = dashMetrics.getCurrentDVRInfo();\n        const DVRWindow = DVRMetrics ? DVRMetrics.range : null;\n        let actualTime;\n\n        if (!DVRWindow) {\n            return NaN;\n        }\n\n        logger.debug(`Checking DVR window for at ${currentTime} with DVR window range ${DVRWindow.start} - ${DVRWindow.end}`);\n        if (currentTime > DVRWindow.end) {\n            actualTime = Math.max(DVRWindow.end - liveDelay, DVRWindow.start);\n\n        } else if (currentTime > 0 && currentTime + 0.250 < DVRWindow.start && Math.abs(currentTime - DVRWindow.start) < 315360000) {\n\n            // Checking currentTime plus 250ms as the 'timeupdate' is fired with a frequency between 4Hz and 66Hz\n            // https://developer.mozilla.org/en-US/docs/Web/Events/timeupdate\n            // http://w3c.github.io/html/single-page.html#offsets-into-the-media-resource\n            // Checking also duration of the DVR makes sense. We detected temporary situations in which currentTime\n            // is bad reported by the browser which causes playback to jump to start (315360000 = 1 year)\n            //actualTime = DVRWindow.start;\n            actualTime = DVRWindow.start;\n        } else {\n            actualTime = currentTime;\n        }\n\n        return actualTime;\n    }\n\n    function startUpdatingWallclockTime() {\n        if (wallclockTimeIntervalId !== null) return;\n\n        const tick = function () {\n            onWallclockTime();\n        };\n\n        wallclockTimeIntervalId = setInterval(tick, settings.get().streaming.wallclockTimeUpdateInterval);\n    }\n\n    function stopUpdatingWallclockTime() {\n        clearInterval(wallclockTimeIntervalId);\n        wallclockTimeIntervalId = null;\n    }\n\n    function updateCurrentTime() {\n        if (isPaused() || !isDynamic || videoModel.getReadyState() === 0) return;\n        const currentTime = getNormalizedTime();\n        const actualTime = getActualPresentationTime(currentTime);\n        const timeChanged = (!isNaN(actualTime) && actualTime !== currentTime);\n        if (timeChanged) {\n            logger.debug(`UpdateCurrentTime: Seek to actual time: ${actualTime} from currentTime: ${currentTime}`);\n            seek(actualTime);\n        }\n    }\n\n    function onDataUpdateCompleted(e) {\n        if (e.error) return;\n\n        const representationInfo = adapter.convertDataToRepresentationInfo(e.currentRepresentation);\n        const info = representationInfo ? representationInfo.mediaInfo.streamInfo : null;\n\n        if (info === null || streamInfo.id !== info.id) return;\n        streamInfo = info;\n\n        updateCurrentTime();\n    }\n\n    function onCanPlay() {\n        eventBus.trigger(Events.CAN_PLAY);\n    }\n\n    function onPlaybackStart() {\n        logger.info('Native video element event: play');\n        updateCurrentTime();\n        startUpdatingWallclockTime();\n        eventBus.trigger(Events.PLAYBACK_STARTED, { startTime: getTime() });\n    }\n\n    function onPlaybackWaiting() {\n        logger.info('Native video element event: waiting');\n        eventBus.trigger(Events.PLAYBACK_WAITING, { playingTime: getTime() });\n    }\n\n    function onPlaybackPlaying() {\n        logger.info('Native video element event: playing');\n        eventBus.trigger(Events.PLAYBACK_PLAYING, { playingTime: getTime() });\n    }\n\n    function onPlaybackPaused() {\n        logger.info('Native video element event: pause');\n        eventBus.trigger(Events.PLAYBACK_PAUSED, { ended: getEnded() });\n    }\n\n    function onPlaybackSeeking() {\n        let seekTime = getTime();\n        // On some browsers/devices, in case of live streams, setting current time on video element fails when there is no buffered data at requested time\n        // Then re-set seek target time and video element will be seeked afterwhile once data is buffered (see BufferContoller)\n        if (!isNaN(seekTarget) && seekTarget !== seekTime) {\n            seekTime = seekTarget;\n        }\n        seekTarget = NaN;\n\n        logger.info('Seeking to: ' + seekTime);\n        startUpdatingWallclockTime();\n        eventBus.trigger(Events.PLAYBACK_SEEKING, { seekTime: seekTime });\n    }\n\n    function onPlaybackSeeked() {\n        logger.info('Native video element event: seeked');\n        eventBus.trigger(Events.PLAYBACK_SEEKED);\n        // Reactivate 'seeking' event listener (see seek())\n        videoModel.addEventListener('seeking', onPlaybackSeeking);\n    }\n\n    function onPlaybackTimeUpdated() {\n        if (streamInfo) {\n            eventBus.trigger(Events.PLAYBACK_TIME_UPDATED, {\n                timeToEnd: getTimeToStreamEnd(),\n                time: getTime()\n            });\n        }\n    }\n\n    function updateLivePlaybackTime() {\n        const now = Date.now();\n        if (!lastLivePlaybackTime || now > lastLivePlaybackTime + LIVE_UPDATE_PLAYBACK_TIME_INTERVAL_MS) {\n            lastLivePlaybackTime = now;\n            onPlaybackTimeUpdated();\n        }\n    }\n\n    function onPlaybackProgress() {\n        eventBus.trigger(Events.PLAYBACK_PROGRESS);\n    }\n\n    function onPlaybackRateChanged() {\n        const rate = getPlaybackRate();\n        logger.info('Native video element event: ratechange: ', rate);\n        eventBus.trigger(Events.PLAYBACK_RATE_CHANGED, { playbackRate: rate });\n    }\n\n    function onPlaybackMetaDataLoaded() {\n        logger.info('Native video element event: loadedmetadata');\n        eventBus.trigger(Events.PLAYBACK_METADATA_LOADED);\n        startUpdatingWallclockTime();\n    }\n\n    // Event to handle the native video element ended event\n    function onNativePlaybackEnded() {\n        logger.info('Native video element event: ended');\n        pause();\n        stopUpdatingWallclockTime();\n        eventBus.trigger(Events.PLAYBACK_ENDED, { 'isLast': streamController.getActiveStreamInfo().isLast });\n    }\n\n    // Handle DASH PLAYBACK_ENDED event\n    function onPlaybackEnded(e) {\n        if (wallclockTimeIntervalId && e.isLast) {\n            // PLAYBACK_ENDED was triggered elsewhere, react.\n            logger.info('onPlaybackEnded -- PLAYBACK_ENDED but native video element didn\\'t fire ended');\n            const seekTime = e.seekTime ? e.seekTime : getStreamEndTime();\n            videoModel.setCurrentTime(seekTime);\n            pause();\n            stopUpdatingWallclockTime();\n        }\n    }\n\n    function onPlaybackError(event) {\n        const target = event.target || event.srcElement;\n        eventBus.trigger(Events.PLAYBACK_ERROR, { error: target.error });\n    }\n\n    function onWallclockTime() {\n        eventBus.trigger(Events.WALLCLOCK_TIME_UPDATED, {\n            isDynamic: isDynamic,\n            time: new Date()\n        });\n\n        // Updates playback time for paused dynamic streams\n        // (video element doesn't call timeupdate when the playback is paused)\n        if (getIsDynamic() && isPaused()) {\n            updateLivePlaybackTime();\n        }\n    }\n\n    function onPlaybackProgression() {\n        if (\n            isDynamic &&\n            _isCatchupEnabled() &&\n            settings.get().streaming.liveCatchup.playbackRate > 0 &&\n            !isPaused() &&\n            !isSeeking()\n        ) {\n            if (_needToCatchUp()) {\n                startPlaybackCatchUp();\n            } else {\n                stopPlaybackCatchUp();\n            }\n        }\n    }\n\n    function _isCatchupEnabled() {\n        return settings.get().streaming.liveCatchup.enabled || settings.get().streaming.lowLatencyEnabled;\n    }\n\n    function getBufferLevel() {\n        let bufferLevel = null;\n        streamController.getActiveStreamProcessors().forEach(p => {\n            const bl = p.getBufferLevel();\n            if (bufferLevel === null) {\n                bufferLevel = bl;\n            } else {\n                bufferLevel = Math.min(bufferLevel, bl);\n            }\n        });\n\n        return bufferLevel;\n    }\n\n    /**\n     * Returns the mode for live playback catchup.\n     * @return {String}\n     * @private\n     */\n    function _getCatchupMode() {\n        const playbackBufferMin = settings.get().streaming.liveCatchup.playbackBufferMin;\n\n        return settings.get().streaming.liveCatchup.mode === Constants.LIVE_CATCHUP_MODE_LOLP && playbackBufferMin !== null && !isNaN(playbackBufferMin) ? Constants.LIVE_CATCHUP_MODE_LOLP : Constants.LIVE_CATCHUP_MODE_DEFAULT;\n    }\n\n    /**\n     * Checks whether the catchup mechanism should be enabled\n     * @return {boolean}\n     */\n    function _needToCatchUp() {\n        try {\n            if (_isCatchupEnabled() && settings.get().streaming.liveCatchup.playbackRate > 0 && getTime() > 0) {\n\n                const catchupMode = _getCatchupMode();\n                const currentLiveLatency = getCurrentLiveLatency();\n                const liveDelay = mediaPlayerModel.getLiveDelay();\n                const liveCatchupLatencyThreshold = mediaPlayerModel.getLiveCatchupLatencyThreshold();\n                const liveCatchUpMinDrift = settings.get().streaming.liveCatchup.minDrift;\n\n                if (catchupMode === Constants.LIVE_CATCHUP_MODE_LOLP) {\n                    const currentBuffer = getBufferLevel();\n                    const playbackBufferMin = settings.get().streaming.liveCatchup.playbackBufferMin;\n\n                    return _lolpNeedToCatchUpCustom(currentLiveLatency, liveDelay, liveCatchUpMinDrift, currentBuffer, playbackBufferMin, liveCatchupLatencyThreshold);\n                } else {\n                    return _defaultNeedToCatchUp(currentLiveLatency, liveDelay, liveCatchupLatencyThreshold, liveCatchUpMinDrift);\n                }\n            }\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Default algorithm to determine if catchup mode should be enabled\n     * @param {number} currentLiveLatency\n     * @param {number} liveDelay\n     * @param {number} liveCatchupLatencyThreshold\n     * @param {number} minDrift\n     * @return {boolean}\n     * @private\n     */\n    function _defaultNeedToCatchUp(currentLiveLatency, liveDelay, liveCatchupLatencyThreshold, minDrift) {\n        try {\n            const latencyDrift = Math.abs(currentLiveLatency - liveDelay);\n\n            return latencyDrift > minDrift && (isNaN(liveCatchupLatencyThreshold) || currentLiveLatency <= liveCatchupLatencyThreshold);\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * LoL+ logic to determine if catchup mode should be enabled\n     * @param {number} currentLiveLatency\n     * @param {number} liveDelay\n     * @param {number} minDrift\n     * @param {number} currentBuffer\n     * @param {number} playbackBufferMin\n     * @param {number} liveCatchupLatencyThreshold\n     * @return {boolean}\n     * @private\n     */\n    function _lolpNeedToCatchUpCustom(currentLiveLatency, liveDelay, minDrift, currentBuffer, playbackBufferMin, liveCatchupLatencyThreshold) {\n        try {\n            const latencyDrift = Math.abs(currentLiveLatency - liveDelay);\n\n            return (isNaN(liveCatchupLatencyThreshold) || currentLiveLatency <= liveCatchupLatencyThreshold) && (latencyDrift > minDrift || currentBuffer < playbackBufferMin);\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Apply catchup mode\n     */\n    function startPlaybackCatchUp() {\n        if (videoModel) {\n            let results;\n            const currentPlaybackRate = videoModel.getPlaybackRate();\n            const liveCatchupPlaybackRate = settings.get().streaming.liveCatchup.playbackRate;\n            const currentLiveLatency = getCurrentLiveLatency();\n            const liveDelay = mediaPlayerModel.getLiveDelay();\n            const bufferLevel = getBufferLevel();\n            // Custom playback control: Based on buffer level\n            if (_getCatchupMode() === Constants.LIVE_CATCHUP_MODE_LOLP) {\n                const liveCatchUpMinDrift = settings.get().streaming.liveCatchup.minDrift;\n                const playbackBufferMin = settings.get().streaming.liveCatchup.playbackBufferMin;\n                results = _calculateNewPlaybackRateLolP(liveCatchupPlaybackRate, currentLiveLatency, liveDelay, liveCatchUpMinDrift, playbackBufferMin, bufferLevel, currentPlaybackRate);\n            } else {\n                // Default playback control: Based on target and current latency\n                results = _calculateNewPlaybackRateDefault(liveCatchupPlaybackRate, currentLiveLatency, liveDelay, bufferLevel, currentPlaybackRate);\n            }\n\n            // Obtain newRate and apply to video model\n            let newRate = results.newRate;\n            if (newRate) {  // non-null\n                videoModel.setPlaybackRate(newRate);\n            }\n\n            const deltaLatency = currentLiveLatency - liveDelay;\n            if (settings.get().streaming.liveCatchup.maxDrift > 0 && !isLowLatencySeekingInProgress &&\n                deltaLatency > settings.get().streaming.liveCatchup.maxDrift) {\n                logger.info('Low Latency catchup mechanism. Latency too high, doing a seek to live point');\n                isLowLatencySeekingInProgress = true;\n                seekToLive();\n            } else {\n                isLowLatencySeekingInProgress = false;\n            }\n        }\n    }\n\n    /**\n     * Default algorithm to calculate the new playback rate\n     * @param {number} liveCatchUpPlaybackRate\n     * @param {number} currentLiveLatency\n     * @param {number} liveDelay\n     * @param {number} bufferLevel\n     * @param {number} currentPlaybackRate\n     * @return {{newRate: number}}\n     * @private\n     */\n    function _calculateNewPlaybackRateDefault(liveCatchUpPlaybackRate, currentLiveLatency, liveDelay, bufferLevel, currentPlaybackRate) {\n        const cpr = liveCatchUpPlaybackRate;\n        const deltaLatency = currentLiveLatency - liveDelay;\n        const d = deltaLatency * 5;\n\n        // Playback rate must be between (1 - cpr) - (1 + cpr)\n        // ex: if cpr is 0.5, it can have values between 0.5 - 1.5\n        const s = (cpr * 2) / (1 + Math.pow(Math.E, -d));\n        let newRate = (1 - cpr) + s;\n        // take into account situations in which there are buffer stalls,\n        // in which increasing playbackRate to reach target latency will\n        // just cause more and more stall situations\n        if (playbackStalled) {\n            // const bufferLevel = getBufferLevel();\n            if (bufferLevel > liveDelay / 2) {\n                // playbackStalled = false;\n                playbackStalled = false;\n            } else if (deltaLatency > 0) {\n                newRate = 1.0;\n            }\n        }\n\n        // don't change playbackrate for small variations (don't overload element with playbackrate changes)\n        if (Math.abs(currentPlaybackRate - newRate) <= minPlaybackRateChange) {\n            newRate = null;\n        }\n\n        return {\n            newRate: newRate\n        };\n\n    }\n\n    /**\n     * Lol+ algorithm to calculate the new playback rate\n     * @param {number} liveCatchUpPlaybackRate\n     * @param {number} currentLiveLatency\n     * @param {number} liveDelay\n     * @param {number} minDrift\n     * @param {number} playbackBufferMin\n     * @param {number} bufferLevel\n     * @param {number} currentPlaybackRate\n     * @return {{newRate: number}}\n     * @private\n     */\n    function _calculateNewPlaybackRateLolP(liveCatchUpPlaybackRate, currentLiveLatency, liveDelay, minDrift, playbackBufferMin, bufferLevel, currentPlaybackRate) {\n        const cpr = liveCatchUpPlaybackRate;\n        let newRate;\n\n        // Hybrid: Buffer-based\n        if (bufferLevel < playbackBufferMin) {\n            // Buffer in danger, slow down\n            const deltaBuffer = bufferLevel - playbackBufferMin;  // -ve value\n            const d = deltaBuffer * 5;\n\n            // Playback rate must be between (1 - cpr) - (1 + cpr)\n            // ex: if cpr is 0.5, it can have values between 0.5 - 1.5\n            const s = (cpr * 2) / (1 + Math.pow(Math.E, -d));\n            newRate = (1 - cpr) + s;\n\n            logger.debug('[LoL+ playback control_buffer-based] bufferLevel: ' + bufferLevel + ', newRate: ' + newRate);\n        } else {\n            // Hybrid: Latency-based\n            // Buffer is safe, vary playback rate based on latency\n\n            // Check if latency is within range of target latency\n            const minDifference = 0.02;\n            if (Math.abs(currentLiveLatency - liveDelay) <= (minDifference * liveDelay)) {\n                newRate = 1;\n            } else {\n                const deltaLatency = currentLiveLatency - liveDelay;\n                const d = deltaLatency * 5;\n\n                // Playback rate must be between (1 - cpr) - (1 + cpr)\n                // ex: if cpr is 0.5, it can have values between 0.5 - 1.5\n                const s = (cpr * 2) / (1 + Math.pow(Math.E, -d));\n                newRate = (1 - cpr) + s;\n            }\n\n            logger.debug('[LoL+ playback control_latency-based] latency: ' + currentLiveLatency + ', newRate: ' + newRate);\n        }\n\n        if (playbackStalled) {\n            if (bufferLevel > liveDelay / 2) {\n                playbackStalled = false;\n            }\n        }\n\n        // don't change playbackrate for small variations (don't overload element with playbackrate changes)\n        if (Math.abs(currentPlaybackRate - newRate) <= minPlaybackRateChange) {\n            newRate = null;\n        }\n\n        return {\n            newRate: newRate\n        };\n    }\n\n    function stopPlaybackCatchUp() {\n        if (videoModel) {\n            videoModel.setPlaybackRate(1.0);\n        }\n    }\n\n    function onFragmentLoadProgress(e) {\n        // If using fetch and stream mode is not available, readjust live latency so it is 20% higher than segment duration\n        if (e.stream === false && settings.get().streaming.lowLatencyEnabled && !isNaN(e.request.duration)) {\n            const minDelay = 1.2 * e.request.duration;\n            if (minDelay > mediaPlayerModel.getLiveDelay()) {\n                logger.warn('Browser does not support fetch API with StreamReader. Increasing live delay to be 20% higher than segment duration:', minDelay.toFixed(2));\n                const s = { streaming: { liveDelay: minDelay } };\n                settings.update(s);\n            }\n        }\n    }\n\n    function onBufferLevelStateChanged(e) {\n        // do not stall playback when get an event from Stream that is not active\n        if (e.streamId !== streamInfo.id) return;\n\n        if (_isCatchupEnabled()) {\n            if (e.state === MetricsConstants.BUFFER_EMPTY && !isSeeking()) {\n                if (!playbackStalled) {\n                    playbackStalled = true;\n                    stopPlaybackCatchUp();\n                }\n            }\n        } else {\n            videoModel.setStallState(e.mediaType, e.state === MetricsConstants.BUFFER_EMPTY);\n        }\n    }\n\n    function onPlaybackStalled(e) {\n        eventBus.trigger(Events.PLAYBACK_STALLED, { e: e });\n    }\n\n    function onStreamInitializing(e) {\n        applyServiceDescription(e.streamInfo, e.mediaInfo);\n    }\n\n    function applyServiceDescription(streamInfo, mediaInfo) {\n        if (streamInfo && streamInfo.manifestInfo && streamInfo.manifestInfo.serviceDescriptions) {\n            // is there a service description for low latency defined?\n            let llsd;\n\n            for (let i = 0; i < streamInfo.manifestInfo.serviceDescriptions.length; i++) {\n                const sd = streamInfo.manifestInfo.serviceDescriptions[i];\n                if (sd.schemeIdUri === Constants.SERVICE_DESCRIPTION_LL_SCHEME) {\n                    llsd = sd;\n                    break;\n                }\n            }\n\n            if (llsd) {\n                if (mediaInfo && mediaInfo.supplementalProperties &&\n                    mediaInfo.supplementalProperties[Constants.SUPPLEMENTAL_PROPERTY_LL_SCHEME] === 'true') {\n                    if (llsd.latency && llsd.latency.target > 0) {\n                        logger.debug('Apply LL properties coming from service description. Target Latency (ms):', llsd.latency.target);\n                        settings.update({\n                            streaming: {\n                                lowLatencyEnabled: true,\n                                liveDelay: llsd.latency.target / 1000,\n                                liveCatchup: {\n                                    minDrift: llsd.latency.max > llsd.latency.target ? (llsd.latency.max - llsd.latency.target) / 1000 : undefined\n                                }\n                            }\n                        });\n                    }\n                    if (llsd.playbackRate && llsd.playbackRate.max > 1.0) {\n                        logger.debug('Apply LL properties coming from service description. Max PlaybackRate:', llsd.playbackRate.max);\n                        settings.update({\n                            streaming: {\n                                lowLatencyEnabled: true,\n                                liveCatchup: {\n                                    playbackRate: llsd.playbackRate.max - 1.0\n                                }\n                            }\n                        });\n                    }\n                }\n            }\n        }\n    }\n\n    function addAllListeners() {\n        videoModel.addEventListener('canplay', onCanPlay);\n        videoModel.addEventListener('play', onPlaybackStart);\n        videoModel.addEventListener('waiting', onPlaybackWaiting);\n        videoModel.addEventListener('playing', onPlaybackPlaying);\n        videoModel.addEventListener('pause', onPlaybackPaused);\n        videoModel.addEventListener('error', onPlaybackError);\n        videoModel.addEventListener('seeking', onPlaybackSeeking);\n        videoModel.addEventListener('seeked', onPlaybackSeeked);\n        videoModel.addEventListener('timeupdate', onPlaybackTimeUpdated);\n        videoModel.addEventListener('progress', onPlaybackProgress);\n        videoModel.addEventListener('ratechange', onPlaybackRateChanged);\n        videoModel.addEventListener('loadedmetadata', onPlaybackMetaDataLoaded);\n        videoModel.addEventListener('stalled', onPlaybackStalled);\n        videoModel.addEventListener('ended', onNativePlaybackEnded);\n    }\n\n    function removeAllListeners() {\n        videoModel.removeEventListener('canplay', onCanPlay);\n        videoModel.removeEventListener('play', onPlaybackStart);\n        videoModel.removeEventListener('waiting', onPlaybackWaiting);\n        videoModel.removeEventListener('playing', onPlaybackPlaying);\n        videoModel.removeEventListener('pause', onPlaybackPaused);\n        videoModel.removeEventListener('error', onPlaybackError);\n        videoModel.removeEventListener('seeking', onPlaybackSeeking);\n        videoModel.removeEventListener('seeked', onPlaybackSeeked);\n        videoModel.removeEventListener('timeupdate', onPlaybackTimeUpdated);\n        videoModel.removeEventListener('progress', onPlaybackProgress);\n        videoModel.removeEventListener('ratechange', onPlaybackRateChanged);\n        videoModel.removeEventListener('loadedmetadata', onPlaybackMetaDataLoaded);\n        videoModel.removeEventListener('stalled', onPlaybackStalled);\n        videoModel.removeEventListener('ended', onNativePlaybackEnded);\n    }\n\n    instance = {\n        initialize: initialize,\n        setConfig: setConfig,\n        getStartTimeFromUriParameters: getStartTimeFromUriParameters,\n        getTimeToStreamEnd: getTimeToStreamEnd,\n        getTime: getTime,\n        getNormalizedTime: getNormalizedTime,\n        getPlaybackRate: getPlaybackRate,\n        getPlayedRanges: getPlayedRanges,\n        getEnded: getEnded,\n        getIsDynamic: getIsDynamic,\n        getStreamController: getStreamController,\n        computeAndSetLiveDelay: computeAndSetLiveDelay,\n        getLiveDelay: getLiveDelay,\n        setLiveDelay: setLiveDelay,\n        getCurrentLiveLatency: getCurrentLiveLatency,\n        play: play,\n        isPaused: isPaused,\n        pause: pause,\n        isSeeking: isSeeking,\n        getStreamEndTime,\n        seek: seek,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nPlaybackController.__dashjs_factory_name = 'PlaybackController';\nexport default FactoryMaker.getSingletonFactory(PlaybackController);\n"]}